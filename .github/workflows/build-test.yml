name: Build Test

on:
  push:
    branches: [ master, main ]
    paths-ignore:
      - '**.md'
      - 'doc/**'

  pull_request:
    branches: [ master, main ]
    paths-ignore:
      - '**.md'
      - 'doc/**'
  workflow_dispatch:
    inputs:
      build_android:
        description: 'Build Android'
        required: false
        type: boolean
        default: true
      build_ios:
        description: 'Build iOS'
        required: false
        type: boolean
        default: true
      build_macos:
        description: 'Build macOS'
        required: false
        type: boolean
        default: true
      build_linux:
        description: 'Build Linux'
        required: false
        type: boolean
        default: true
      build_linux_arm64:
        description: 'Build Linux ARM64'
        required: false
        type: boolean
        default: true
      build_windows:
        description: 'Build Windows'
        required: false
        type: boolean
        default: true
      build_windows_arm64:
        description: 'Build Windows ARM64'
        required: false
        type: boolean
        default: true
      build_web:
        description: 'Build Web'
        required: false
        type: boolean
        default: true

jobs:
  # Android build
  android:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.build_android }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Java
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: 'temurin'
          java-version: '18'

      - name: Setup Flutter
        run: |
          git clone https://github.com/flutter/flutter.git --depth 1 --branch stable ~/flutter
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          ~/flutter/bin/flutter config --no-enable-linux-desktop
          ~/flutter/bin/flutter channel stable
          ~/flutter/bin/flutter doctor -v
          yes | ~/flutter/bin/flutter doctor --android-licenses

      - name: Install dependencies
        working-directory: packages/pdfrx/example/viewer
        run: flutter pub get

      - name: Build App Bundle
        working-directory: packages/pdfrx/example/viewer
        run: flutter build apk --debug --verbose

  # iOS build
  ios:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.build_ios }}
    runs-on: macos-latest
    strategy:
      matrix:
        package_manager: [cocoapods, swiftpm]
    name: ios-${{ matrix.package_manager }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Flutter
        run: |
          git clone https://github.com/flutter/flutter.git --depth 1 --branch stable ~/flutter
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          ~/flutter/bin/flutter config --no-enable-android --no-enable-macos-desktop
          ~/flutter/bin/flutter channel stable
          ~/flutter/bin/flutter doctor -v

      - name: Configure package manager
        run: |
          if [ "${{ matrix.package_manager }}" = "swiftpm" ]; then
            ~/flutter/bin/flutter config --enable-swift-package-manager
          else
            ~/flutter/bin/flutter config --no-enable-swift-package-manager
          fi

      - name: Install dependencies
        working-directory: packages/pdfrx/example/viewer
        run: flutter pub get

      - name: Build iOS (no signing) - ${{ matrix.package_manager }}
        working-directory: packages/pdfrx/example/viewer
        run: flutter build ios --debug --no-codesign --verbose

  # macOS build
  macos:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.build_macos }}
    runs-on: macos-latest
    strategy:
      matrix:
        package_manager: [cocoapods, swiftpm]
    name: macos-${{ matrix.package_manager }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Flutter
        run: |
          git clone https://github.com/flutter/flutter.git --depth 1 --branch stable ~/flutter
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          ~/flutter/bin/flutter config --no-enable-android --no-enable-ios
          ~/flutter/bin/flutter channel stable
          ~/flutter/bin/flutter doctor -v

      - name: Configure package manager
        run: |
          if [ "${{ matrix.package_manager }}" = "swiftpm" ]; then
            ~/flutter/bin/flutter config --enable-swift-package-manager
          else
            ~/flutter/bin/flutter config --no-enable-swift-package-manager
          fi

      - name: Install dependencies
        working-directory: packages/pdfrx/example/viewer
        run: flutter pub get

      - name: Build macOS - ${{ matrix.package_manager }}
        working-directory: packages/pdfrx/example/viewer
        run: flutter build macos --debug --verbose

  # Linux build
  linux:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.build_linux }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Setup Flutter
        run: |
          git clone https://github.com/flutter/flutter.git --depth 1 --branch stable ~/flutter
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          ~/flutter/bin/flutter config --no-enable-android
          ~/flutter/bin/flutter channel stable
          ~/flutter/bin/flutter doctor -v

      - name: Install dependencies
        working-directory: packages/pdfrx/example/viewer
        run: flutter pub get

      - name: Build Linux
        working-directory: packages/pdfrx/example/viewer
        run: flutter build linux --debug --verbose

  # Linux ARM64 build
  linux-arm64:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.build_linux_arm64 }}
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Setup Flutter
        run: |
          git clone https://github.com/flutter/flutter.git --depth 1 --branch stable ~/flutter
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          ~/flutter/bin/flutter config --no-enable-android
          ~/flutter/bin/flutter channel stable
          ~/flutter/bin/flutter doctor -v

      - name: Install dependencies
        working-directory: packages/pdfrx/example/viewer
        run: flutter pub get

      - name: Build Linux
        working-directory: packages/pdfrx/example/viewer
        run: flutter build linux --debug --verbose

  # Windows build
  windows:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.build_windows }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Flutter
        shell: pwsh
        run: |
          git clone https://github.com/flutter/flutter.git --depth 1 --branch stable C:\flutter
          echo "C:\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          C:\flutter\bin\flutter.bat config --no-enable-android
          C:\flutter\bin\flutter.bat channel stable
          C:\flutter\bin\flutter.bat doctor -v

      - name: Install dependencies
        working-directory: packages/pdfrx/example/viewer
        run: C:\flutter\bin\flutter.bat pub get

      - name: Build Windows
        working-directory: packages/pdfrx/example/viewer
        run: C:\flutter\bin\flutter.bat build windows --debug --verbose

  # Windows ARM64 build (requires ARM64 runner or cross-compilation)
  windows-arm64:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.build_windows_arm64 }}
    runs-on: windows-11-arm
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Flutter (master branch for ARM64 support)
        shell: pwsh
        run: |
          git clone https://github.com/flutter/flutter.git --depth 1 C:\flutter
          echo "C:\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          C:\flutter\bin\flutter.bat config --no-enable-android
          C:\flutter\bin\flutter.bat doctor -v
      - name: Monorepo setup
        run: ~/flutter/bin/dart pub get
      - name: Install dependencies
        working-directory: packages/pdfrx/example/viewer
        run: C:\flutter\bin\flutter.bat pub get

      - name: Build Windows ARM64
        working-directory: packages/pdfrx/example/viewer
        run: C:\flutter\bin\flutter.bat build windows --debug --verbose

  # Web build
  web:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.build_web }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Flutter
        run: |
          git clone https://github.com/flutter/flutter.git --depth 1 --branch stable ~/flutter
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          ~/flutter/bin/flutter config --no-enable-android --no-enable-linux-desktop
          ~/flutter/bin/flutter channel stable
          ~/flutter/bin/flutter doctor -v

      - name: Install dependencies
        working-directory: packages/pdfrx/example/viewer
        run: flutter pub get

      - name: Build Web
        working-directory: packages/pdfrx/example/viewer
        run: flutter build web --verbose

      - name: Build Web (WASM)
        working-directory: packages/pdfrx/example/viewer
        run: flutter build web --wasm --verbose
